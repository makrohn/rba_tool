#Copyright 2016 Matthew Krohn
#
#This file is part of RBATool.
#
#Basic Inventory is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""File generated by Django for new app"""
import datetime

from django.db import models
from django.utils.encoding import python_2_unicode_compatible
from django.utils import timezone


class Team(models.Model):
    """Object to define team responsible for provisioning access to service"""
    team_name = models.CharField(max_length=200, unique=True)
    contact_info = models.CharField(max_length=200, unique=True)
    color = models.CharField(max_length=200, blank=True, unique=False)

    def __str__(self):
        return self.team_name


class Service(models.Model):
    """Object to define a server or SaaS product"""
    service_name = models.CharField(max_length=200, unique=True)
    responsible_team = models.ForeignKey(Team, null=True, blank=True)

    def service_color(self):
        return self.responsible_team.color

    def service_team(self):
        return self.responsible_team.team_name

    def __str__(self):
        return self.service_name


class Role(models.Model):
    """
    Object to define the job an individual does at Dyn
    or orgnaization unit to which that role belongs
    """
    role_name = models.CharField(max_length=200, unique=True)

    def __str__(self):
        return self.role_name
    membership = models.ForeignKey('self', blank=True, null=True)


class Access(models.Model):
    """Object to define what level of access a role gets to what service"""
    access_level = models.CharField(max_length=400, null=True, blank=True)
    associated_role = models.ForeignKey(Role)
    associated_service = models.ForeignKey(Service)

    def __str__(self):
        return self.associated_service.service_name
